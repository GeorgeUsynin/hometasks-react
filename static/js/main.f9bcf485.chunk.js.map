{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h12/HW12.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","images/preloader.svg","Preloader.tsx","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h12/HW12.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h13/Request/RequestsAPI.ts","p2-homeworks/h13/Request/Request.tsx","p2-homeworks/h13/HW13.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","Header","className","cls","navbar","to","activeClassName","active","navbar_square","Message","props","s","message_wrapper","src","avatar","alt","userName_text_time","userName_text","name","message","time","messageData","HW1","Affair","priorityColor","affair","priority","high","middle","low","onClick","deleteAffairCallback","_id","delete_button","Affairs","mappedAffairs","data","map","a","affairs_wrapper","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","addUserOnKeyPress","inputClass","no_error","wrapper","value","onChange","input","onKeyPress","error_message","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","key","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","trim","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","SuperSelect","options","onChangeOption","mappedOptions","o","index","SuperRadio","onChangeCallback","opt","i","arr","HW7","homeWorkReducer","action","copyState","p","payload","sort","b","age","initialPeople","HW8","people","setPeople","finalPeople","Clock","timerId","setTimerId","date","setDate","show","setShow","onMouseEnter","onMouseLeave","toLocaleTimeString","toDateString","id","window","setInterval","Date","clearInterval","HW9","ACTION_TYPES","Preloader","React","memo","preloader","initState","isLoading","loadingAC","SET_PRELOADER","HW10","useSelector","loading","dispatch","useDispatch","setTimeout","console","log","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","Slider","style","width","margin","event","newValue","valueLabelDisplay","aria-labelledby","HW11","value1","setValue1","value2","setValue2","arrVal","CHANGE_THEME","theme","themes","HW12","changeThemeC","Junior","axiosInstance","axios","create","baseURL","ignatApi","success","post","Request","setCheckbox","goodResponse","setGoodResponse","height","marginLeft","then","res","errorText","catch","errorResponse","response","HW13","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,OAAS,wBAAwB,KAAO,sBAAsB,OAAS,wBAAwB,IAAM,qBAAqB,cAAgB,+BAA+B,gBAAkB,mC,mBCApPD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,cAAgB,gC,mBCAlGD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,wBAAwB,SAAW,2BAA2B,MAAQ,wBAAwB,cAAgB,gCAAgC,QAAU,4B,mBCA1ND,EAAOC,QAAU,CAAC,gBAAkB,iCAAiC,mBAAqB,oCAAoC,cAAgB,+BAA+B,KAAO,wB,mBCApLD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCA1HD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAY,wBAAwB,IAAM,kBAAkB,WAAW,uBAAuB,KAAO,mBAAmB,YAAY,0B,mBCAhLD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,mBCAxFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,MAAQ,4B,0JCgBXC,MAbf,WACI,OACI,8BACI,sBAAKC,UAAWC,IAAIC,OAApB,UACI,cAAC,IAAD,CAASC,GAAG,cAAcC,gBAAiBH,IAAII,OAA/C,wBACA,cAAC,IAAD,CAASF,GAAG,UAAUC,gBAAiBH,IAAII,OAA3C,oBACA,cAAC,IAAD,CAASF,GAAG,WAAWC,gBAAiBH,IAAII,OAA5C,qBACA,sBAAML,UAAWC,IAAIK,sB,wBCYtBC,MAnBf,SAAiBC,GACb,OACI,sBAAKR,UAAWS,IAAEC,gBAAlB,UACI,8BACI,qBAAKC,IAAKH,EAAMI,OAAQC,IAAI,aAEhC,sBAAKb,UAAWS,IAAEK,mBAAlB,UACI,sBAAKd,UAAWS,IAAEM,cAAlB,UACI,4BAAIP,EAAMQ,OACV,4BAAIR,EAAMS,aAEd,qBAAKjB,UAAWS,IAAES,KAAlB,SACKV,EAAMU,cCLrBC,EACM,qFADNA,EAEI,SAFJA,EAGO,0KAHPA,EAII,QAwBKC,MArBf,WACI,OACI,gCACI,uBADJ,cAII,cAAC,EAAD,CACIR,OAAQO,EACRH,KAAMG,EACNF,QAASE,EACTD,KAAMC,IAGV,uBAGA,2B,wBCLGE,MApBf,SAAgBb,GAEZ,IAAMc,EAA0C,SAA1Bd,EAAMe,OAAOC,SAAsBvB,IAAIwB,KAAiC,WAA1BjB,EAAMe,OAAOC,SAAwBvB,IAAIyB,OAASzB,IAAI0B,IAK1H,OACI,sBAAK3B,UAAWC,IAAIsB,OAApB,UACI,oCAAOf,EAAMe,OAAOP,QACpB,8BAAK,sBAAMhB,UAAWsB,EAAjB,oBAAqCd,EAAMe,OAAOC,SAAlD,SACL,8BACI,wBAAQI,QARG,WACnBpB,EAAMqB,qBAAqBrB,EAAMe,OAAOO,MAOC9B,UAAWC,IAAI8B,cAAhD,qBCiBDC,MA3Bf,SAAiBxB,GACb,IAAMyB,EAAgBzB,EAAM0B,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEIb,OAAQa,EACRP,qBAAsBrB,EAAMqB,sBAFvBO,EAAEN,QAWf,OACI,sBAAK9B,UAAWC,IAAIoC,gBAApB,UAEKJ,EAED,wBAAQL,QAVD,WAAOpB,EAAM8B,UAAU,QAU9B,iBACA,wBAAQV,QAVA,WAAOpB,EAAM8B,UAAU,SAU/B,kBACA,wBAAQV,QAVE,WAAOpB,EAAM8B,UAAU,WAUjC,oBACA,wBAAQV,QAVD,WAAOpB,EAAM8B,UAAU,QAU9B,qBCpBNC,EAAoC,CACtC,CAACT,IAAK,EAAGd,KAAM,QAASQ,SAAU,QAClC,CAACM,IAAK,EAAGd,KAAM,QAASQ,SAAU,OAClC,CAACM,IAAK,EAAGd,KAAM,QAASQ,SAAU,OAClC,CAACM,IAAK,EAAGd,KAAM,OAAQQ,SAAU,QACjC,CAACM,IAAK,EAAGd,KAAM,aAAcQ,SAAU,WA8C5BgB,MA3Bf,WAAgB,IAAD,EACmBC,mBAA4BF,GAD/C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIN,EAFJ,KAILO,EApBmB,SAACH,EAA4BE,GACtD,OAAQA,GACJ,IAAK,MACD,OAAOF,EAAQE,QAAO,SAAAR,GAAC,MAAmB,QAAfA,EAAEZ,YACjC,IAAK,SACD,OAAOkB,EAAQE,QAAO,SAAAR,GAAC,MAAmB,WAAfA,EAAEZ,YACjC,IAAK,OACD,OAAOkB,EAAQE,QAAO,SAAAR,GAAC,MAAmB,SAAfA,EAAEZ,YACjC,QACI,OAAOkB,GAWSI,CAAcJ,EAASE,GAG/C,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIV,KAAMW,EACNP,UAAWA,EACXT,qBAXiB,SAACC,GAAD,OAAiBa,EATtB,SAACD,EAA4BZ,GACrD,OAAOY,EAAQE,QAAO,SAAAR,GAAC,OAAIA,EAAEN,MAAQA,KAQoBiB,CAAaL,EAASZ,OAcvE,uBAGA,2B,yBC7BGkB,EAjB+B,SAAC,GAEzC,IADDhC,EACA,EADAA,KAAMiC,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAAYC,EACnD,EADmDA,kBAG9CC,EAAuB,oBAAVH,EAA8B1C,IAAE0C,MAAQ1C,IAAE8C,SAE7D,OACI,sBAAKvD,UAAWS,IAAE+C,QAAlB,UACI,uBAAOC,MAAOzC,EAAM0C,SAAUT,EAAiBjD,UAAS,UAAKsD,EAAL,YAAmB7C,IAAEkD,OACtEC,WAAYP,IACnB,wBAAQzB,QAASsB,EAAjB,iBACA,sDAAuBE,KACvB,qBAAKpD,UAAWS,IAAEoD,cAAlB,SAAkCV,QC4C/BW,EAvDiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEvB,mBAAiB,IADiD,mBACnFzB,EADmF,KAC7EiD,EAD6E,OAEhExB,mBAAiB,IAF+C,mBAEnFU,EAFmF,KAE5Ee,EAF4E,KAyCpFd,EAAaW,EAAMI,OAEzB,OACI,cAAC,EAAD,CACInD,KAAMA,EACNiC,gBA1CgB,SAACmB,GACS,MAA1BA,EAAEC,cAAcZ,MAChBS,EAAS,mBACwB,MAA1BE,EAAEC,cAAcZ,QACvBS,EAAS,IACTD,EAAQG,EAAEC,cAAcZ,SAsCxBJ,kBAtBkB,SAACe,GAET,UAAVA,EAAEE,KAAmBtD,EAAKmD,OAAS,GACnCH,EAAgBhD,GAChBkD,EAAS,IACTK,MAAM,SAAD,OAAUvD,EAAV,OACLiD,EAAQ,KACS,UAAVG,EAAEE,KACTJ,EAAS,oBAeTf,MAAOA,EACPD,QApCQ,WACQ,IAAhBlC,EAAKmD,OACLD,EAAS,oBAETF,EAAgBhD,GAChBkD,EAAS,IACTK,MAAM,SAAD,OAAUvD,EAAV,OACLiD,EAAQ,MA8BRb,WAAYA,K,QC5BToB,MAzBf,WAAgB,IAAD,EACe/B,mBAA0B,IADzC,mBACJsB,EADI,KACGU,EADH,KASX,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CAAmBV,MAAOA,EAAOC,gBAZjB,SAAChD,GACrB,IAAM0D,EAAU,CAAC5C,IAAK6C,cAAM3D,KAAMA,GAClCyD,EAAS,GAAD,mBAAKV,GAAL,CAAYW,QAYhB,uBAGA,2B,+BC2BGE,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEnB,EAOH,EAPGA,SAAUoB,EAOb,EAPaA,aACVlB,EAMH,EANGA,WAAYmB,EAMf,EANeA,QACZ5B,EAKH,EALGA,MACAnD,EAIH,EAJGA,UAAWgF,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMzE,IAAE0C,MAAR,YAAiB6B,GAAgC,IACnEG,EAAmB,UAAMhC,EAAQ1C,IAAE2E,WAAa3E,IAAE4E,WAA/B,YAA6CrF,GAEtE,OACI,qCACI,mCACI6E,KAAM,OACNnB,SArBa,SAACU,GACtBV,GACGA,EAASU,GAEZU,GAAgBA,EAAaV,EAAEC,cAAcZ,QAkBrCG,WAhBe,SAACQ,GACxBR,GAAcA,EAAWQ,GAEzBW,GACa,UAAVX,EAAEE,KACFS,KAYK/E,UAAWmF,GAEPF,IAEP9B,GAAS,sBAAMnD,UAAWkF,EAAjB,SAAsC/B,Q,kCC3B7CmC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKvF,EAGR,EAHQA,UACFiF,EAEN,mCACKO,EAAc,UAAMD,EAAM9E,IAAE8E,IAAM9E,IAAEgF,QAAtB,YAAiCzF,GAErD,OACI,oCACIA,UAAWwF,GACPP,K,iBCqBDS,EA/ByC,SAAC,GASpD,EAPGb,KAOF,IANEnB,EAMH,EANGA,SAAUiC,EAMb,EANaA,gBACV3F,EAKH,EALGA,UACA4F,GAIH,EALcZ,cAKd,EAJGY,UAEGX,EAEN,4FAMKE,EAAmB,UAAM1E,IAAEoF,SAAR,YAAoB7F,GAAwB,IAErE,OACI,kCACI,mCACI6E,KAAM,WACNnB,SAXa,SAACU,GACtBV,GAAYA,EAASU,GACrBuB,GAAmBA,EAAgBvB,EAAEC,cAAcyB,UAU3C9F,UAAWmF,GAEPF,IAEPW,GAAY,sBAAM5F,UAAWS,IAAEuE,cAAnB,SAAmCY,QC2C7CG,MA1Ef,WAAgB,IAAD,EAEatD,mBAAiB,IAF9B,mBAEJuD,EAFI,KAEEC,EAFF,KAGL9C,EAAQ6C,EAAKE,OAAS,GAAK,QAE3BC,EAAY,WACVhD,EACAoB,MAAM,gFAENA,MAAMyB,IATH,EAamBvD,oBAAkB,GAbrC,mBAaJqD,EAbI,KAaKM,EAbL,KAgBX,OACI,gCACI,uBADJ,cAII,sBAAKpG,UAAWS,IAAE4F,OAAlB,UACI,cAAC,EAAD,CACI5C,MAAOuC,EACPlB,aAAcmB,EACdlB,QAASoB,EACThD,MAAOA,IAIX,cAAC,EAAD,CACInD,UAAWS,IAAE6F,OAKjB,cAAC,EAAD,sBAIA,cAAC,EAAD,CACIf,KAAG,EACH3D,QAASuE,EAFb,qBAOA,cAAC,EAAD,CAAaI,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACIT,QAASA,EACTH,gBAAiBS,EAFrB,wBAQA,cAAC,EAAD,CAAeN,QAASA,EAASpC,SA/CxB,SAACU,GAAD,OAAsCgC,EAAWhC,EAAEC,cAAcyB,eAkD9E,uBAKA,2BCEGU,EA1D4C,SAAC,GASvD,EAPGC,UAOF,IANEC,EAMH,EANGA,OACA3B,EAKH,EALGA,QACA4B,EAIH,EAJGA,UAEG1B,EAEN,8DAC+BxC,oBAAkB,GADjD,mBACMmE,EADN,KACgBC,EADhB,OAE8DF,GAAa,GAArEf,EAFN,EAEMA,SAAUkB,EAFhB,EAEgBA,cAAe9G,EAF/B,EAE+BA,UAAc+G,EAF7C,wDAoBK/B,EAAmB,+KAAN,WAA4ChF,GAE/D,OACI,mCACK4G,EAEO,cAAC,EAAD,aACIH,WAAS,EACTC,OAnBG,SAACtC,GACpByC,GAAY,GAEZH,GAAUA,EAAOtC,IAiBDW,QAzBI,WACpB8B,GAAY,GAEZ9B,GAAWA,MAwBSE,IAGR,8CACI6B,cArBU,SAAC1C,GAC3ByC,GAAY,GAEZC,GAAiBA,EAAc1C,IAmBfpE,UAAWgF,GAEP+B,GAJR,aAOKnB,GAAYX,EAAUxB,YCnExC,SAASuD,EAAa1C,EAAa2C,GACtC,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,aAAaC,QAAQhD,EAAK4C,GAIvB,SAASK,EAAgBjD,EAAakD,GACzC,IAAMN,EAAgBG,aAAaI,QAAQnD,GAE3C,OADsB,OAAlB4C,IAAwBM,EAAeL,KAAKO,MAAMR,IAC/CM,EAWXR,EAAqB,OAAQ,CAACW,EAAG,IAAKC,EAAG,IAGhBL,EAAwB,OAAQ,CAACI,EAAG,GAAIC,EAAG,ICcrDC,OAlCf,WAAgB,IAAD,EACepF,mBAAiB,IADhC,mBACJgB,EADI,KACGqE,EADH,KAUX,OACI,gCACI,uBADJ,cAKI,8BACI,cAAC,EAAD,CACIrE,MAAOA,EACPqB,aAAcgD,EACdnB,UAAW,CAACf,SAAUnC,OAAQsE,EAAY,qBAGlD,cAAC,EAAD,CAAanG,QApBR,WACToF,EAAkB,sBAAuBvD,IAmBrC,kBACA,cAAC,EAAD,CAAa7B,QAlBL,WACZkG,EAASP,EAAa,sBAAuB9D,KAiBzC,qBAEA,uBAGA,2BCdGuE,OAbf,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,QCFGC,OAVf,WACI,OACI,gCACI,sCACA,kDACA,uFCwBGC,GAtBqC,SAAC,GAM/C,IAJEC,EAIH,EAJGA,QACUC,GAGb,EAHG1E,SAGH,EAHa0E,gBACPnD,EAEN,uDACKoD,EAAeF,EAAQhG,KAAI,SAACmG,EAAEC,GAChC,OAAO,iCAAqBD,GAARC,MAOxB,OACI,gDAAQ7E,SALa,SAACU,GACtBgE,EAAehE,EAAEC,cAAcZ,SAISwB,GAAxC,aACKoD,MCoBEG,GArCmC,SAAC,GAO9C,EALG3D,KAKF,IALQ7D,EAKT,EALSA,KACNmH,EAIH,EAJGA,QAAS1E,EAIZ,EAJYA,MACT2E,EAGH,EAHGA,eAIEK,GADL,kEACwB,SAACrE,GACtBgE,EAAehE,EAAEC,cAAcZ,SAG7B4E,EAAgBF,EAAUA,EAAQhG,KAAI,SAACuG,EAAKC,GAC9C,OAEI,cADA,CACA,mBACI,uBACI9D,KAAM,QACNnB,SAAU+E,EACVzH,KAAMA,EACNyC,MAAOiF,EACP5C,QAASrC,IAAUiF,IAGtBA,IATOC,MAaf,GAEL,OACI,mCACKN,KCrCPO,GAAM,CAAC,IAAK,IAAK,KAoCRC,OAlCf,WAAgB,IAAD,EACqBpG,mBAASmG,GAAI,IADlC,mBACJnF,EADI,KACG2E,EADH,KAGX,OACI,gCACI,uBADJ,cAKI,8BACI,cAAC,GAAD,CACID,QAASS,GACTnF,MAAOA,EACP2E,eAAgBA,MAGxB,8BACI,cAAC,GAAD,CACIpH,KAAM,QACNmH,QAASS,GACTnF,MAAOA,EACP2E,eAAgBA,MAIxB,uBAIA,2BC3BCU,GAAkB,SAAC7B,EAA0B8B,GAClD,IAAMC,EAAY/B,EAAM9E,KAAI,SAAA8G,GAAC,sBAASA,MACtC,OAAQF,EAAOlE,MACX,IAAK,OACD,MAAuB,OAAnBkE,EAAOG,QACAF,EAAUG,MAAK,SAAC/G,EAAegH,GAAhB,OAAkChH,EAAEpB,KAAOoI,EAAEpI,KAAO,GAAK,KAExEgI,EAAUG,MAAK,SAAC/G,EAAegH,GAAhB,OAAkChH,EAAEpB,KAAOoI,EAAEpI,KAAO,GAAK,KAEvF,IAAK,QACD,OAAOgI,EAAUpG,QAAO,SAAAqG,GAAC,OAAIA,EAAEI,IAAM,MACzC,QACI,OAAOpC,ICRjBqC,GAAmC,CACrC,CAACxH,IAAK,EAAGd,KAAM,qBAAOqI,IAAK,GAC3B,CAACvH,IAAK,EAAGd,KAAM,yDAAaqI,IAAK,IACjC,CAACvH,IAAK,EAAGd,KAAM,2BAAQqI,IAAK,IAC5B,CAACvH,IAAK,EAAGd,KAAM,uCAAUqI,IAAK,IAC9B,CAACvH,IAAK,EAAGd,KAAM,6CAAWqI,IAAK,IAC/B,CAACvH,IAAK,EAAGd,KAAM,iCAASqI,IAAK,KAkDlBE,OA/Cf,WAAgB,IAAD,EACiB9G,mBAAS6G,IAD1B,mBACJE,EADI,KACIC,EADJ,KAGLC,EAAcF,EAAOrH,KAAI,SAAA8G,GAAC,OAC5B,+BACI,6BAAKA,EAAEjI,OACP,6BAAKiI,EAAEI,QAFFJ,EAAEnH,QAWf,OACI,gCACI,uBADJ,cAKI,kCACI,gCACA,+BACI,sCACA,0CAGJ,gCACC4H,OAIL,gCACI,cAAC,EAAD,CAAa9H,QAxBV,kBAAM6H,EAAUX,GAAgBQ,GDLxC,CACHzE,KAAM,OACNqE,QAAS,SC2BD,qBACA,cAAC,EAAD,CAAatH,QAxBR,kBAAM6H,EAAUX,GAAgBQ,GDC1C,CACHzE,KAAM,OACNqE,QAAS,WCqBD,uBACA,cAAC,EAAD,CAAatH,QAxBT,kBAAM6H,EAAUX,GAAgBQ,GDOzC,CACHzE,KAAM,QACNqE,QAAS,OCeD,yBAGJ,uBAGA,2BCXGS,OAjDf,WAAkB,IAAD,EAEiBlH,mBAAiB,GAFlC,mBAENmH,EAFM,KAEGC,EAFH,OAGWpH,qBAHX,mBAGNqH,EAHM,KAGAC,EAHA,OAIWtH,oBAAkB,GAJ7B,mBAINuH,EAJM,KAIAC,EAJA,KA2Bb,OACI,gCACI,qBACIC,aAbS,WACjBD,GAAQ,IAaAE,aAXS,WACjBF,GAAQ,IAQJ,mBALW,OAKX,cAIwBH,EAAOA,EAAKM,qBAAuB,MAG1DJ,GACG,wCAZO,OAYP,cACwBF,EAAOA,EAAKO,eAAiB,MAIzD,cAAC,EAAD,CAAazI,QAjCP,WAEV,IAAM0I,EAAaC,OAAOC,aAAY,WAClCT,EAAQ,IAAIU,QACb,KACHZ,EAAWS,IA4BP,mBACA,cAAC,EAAD,CAAa1I,QArCR,WACT8I,cAAcd,IAoCV,sBC1BGe,ICpBVC,GDoBUD,GAjBf,WACI,OACI,gCACI,uBADJ,cAKI,cAAC,GAAD,IAEA,uBAGA,2BEfG,OAA0B,sCCG5BE,GAAYC,IAAMC,MAAK,WAChC,OACI,8BACI,qBAAKpK,IAAKqK,GAAWnK,IAAI,mB,mBFNhC+J,K,+BAAAA,Q,KAWL,IAAMK,GAA2B,CAC7BC,WAAW,GAgBFC,GAAY,SAACD,GACtB,MAAO,CACHrG,KAAM+F,GAAaQ,cACnBF,cGcOG,OAtCf,WAEI,IAAMH,EAAYI,cAA0B,SAAArE,GAAK,OAAGA,EAAMsE,QAAQL,aAE5DM,EAAWC,eAUjB,OACI,gCACI,uBADJ,eAKKP,EAEO,cAACL,GAAD,IAEA,8BACI,cAAC,EAAD,CAAajJ,QAnBd,WACf4J,EAASL,IAAU,IACnBO,YAAW,WACPF,EAASL,IAAU,MACrB,KACFQ,QAAQC,IAAI,eAcI,8BAKZ,uBAGA,2B,oBCGGC,GA/BmC,SAAC,GAQ9C,EANGhH,KAMF,IALEnB,EAKH,EALGA,SAAUoI,EAKb,EALaA,cACV9L,EAIH,EAJGA,UAEGiF,EAEN,+DAOK8G,EAAmB,UAAMtL,KAAEuL,MAAR,YAAiBhM,GAAwB,IAElE,OACI,mCACI,mCACI6E,KAAM,QACNnB,SAZa,SAACU,GACtBV,GAAYA,EAASU,GAErB0H,GAAiBA,GAAe1H,EAAEC,cAAcZ,QAUxCzD,UAAW+L,GAGP9G,O,SCALgH,GA5B+C,SAAC,GAIzD,IAFEH,EAEH,EAFGA,cAAerI,EAElB,EAFkBA,MASnB,OACI,mCACI,cAACyI,GAAA,EAAD,CACIC,MAAO,CACHC,MAAO,QACPC,OAAQ,UAEZ5I,MAAOA,EACPC,SAZS,SAAC4I,EAAYC,GAC9BT,EAAcS,IAYNC,kBAAkB,OAClBC,kBAAgB,oBCkBjBC,OA5Cf,WAAiB,IAAD,EACgBjK,mBAAS,IADzB,mBACLkK,EADK,KACGC,EADH,OAEgBnK,mBAAS,IAFzB,mBAELoK,EAFK,KAEGC,EAFH,KAWZ,OACI,gCACI,uBADJ,eAKI,gCACI,8BAAMH,IACN,cAAC,GAAD,CACIb,cAAec,EACfnJ,MAAOkJ,OAIf,gCACI,+BAAOA,IACP,cAAC,GAAD,CACIlJ,MAAO,CAACkJ,EAAOE,GACff,cAzBsB,SAACiB,GAEnCH,EAAUG,EAAO,IAEjBD,EAAUC,EAAO,OAwBT,+BAAOF,OAGX,uBAIA,2B,oBC3CNG,GAAe,eAMf/B,GAAY,CACdgC,MAAO,QCALC,GAAS,CAAC,OAAQ,MAAO,QAiChBC,OA/Bf,WAEI,IAAMF,EAAQ3B,cAAkC,SAAArE,GAAK,OAAIA,EAAMgG,MAAMA,SAE/DzB,EAAWC,eAMjB,OACI,sBAAKzL,UAAWS,KAAEwM,GAAlB,UACI,uBACA,sBAAMjN,UAAWS,KAAEwM,EAAQ,SAA3B,0BAGA,qBAAKjN,UAAWS,KAAEwM,EAAQ,SAA1B,oCACA,cAAC,GAAD,CACI9E,QAAS+E,GACT9E,eAbQ,SAAC6E,GACjBzB,EDMoB,SAACyB,GACzB,MAAM,CACFpI,KAAMmI,GACNC,SCTSG,CAAaH,KAadxJ,MAAOwJ,IAMX,2BCdGI,OAbf,WACI,OACI,gCACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,Q,SCdRC,G,QAAgBC,EAAMC,OAAO,CAC7BC,QAAS,0CAGAC,GAAW,SACXC,GACL,OAAOL,GAAcM,KAAK,YAAY,CAClCD,aCLCE,GAAU,WAAO,IAAD,EAEOpL,oBAAS,GAFhB,mBAElBoD,EAFkB,KAERiI,EAFQ,OAICrL,mBAAwB,MAJzB,mBAIlBU,EAJkB,KAIXe,EAJW,OAMezB,mBAAwB,MANvC,mBAMlBsL,EANkB,KAMJC,EANI,KAmBzB,OACI,gCACI,uBAEA,gCACI,4HACA,2HACA,uBACI7B,MAAO,CACHC,MAAO,OACP6B,OAAQ,OACRC,WAAY,QAEhBpI,QAASD,EACThB,KAAM,WACNnB,SAAU,SAACU,GAAD,OAAO0J,EAAY1J,EAAEC,cAAcyB,eAGrD,cAAC,EAAD,CAAalE,QA7BE,WACnB8L,GAAiB7H,GACZsI,MAAK,SAAAC,GACFJ,EAAgBI,EAAIlM,KAAKmM,cAE5BC,OAAM,SAAAnL,GACH,IAAIoL,EAAgBpL,EAAMqL,SAAWrL,EAAMqL,SAAStM,KAAKmM,UAAYlL,EAAMlC,QAC3EiD,EAASqK,OAsBb,2BAIA,4BAAIpL,GAAK,iBAAcA,KACvB,4BAAI4K,GAAY,yBAAsBA,KACtC,cAAC,EAAD,CAAanM,QAAS,WAClBsC,EAAS,MACT8J,EAAgB,OAFpB,6BAOA,2BCnDCS,GAAO,WAChB,OACI,8BACI,cAAC,GAAD,OCMGC,OARf,WACI,OACI,8BACI,cAAC,GAAD,OCACC,GACG,cADHA,GAED,UAFCA,GAGI,WAyBFC,OAtBf,WACI,OACI,8BAEI,eAAC,IAAD,WAIA,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAU5O,GAAIwO,QAEpD,cAAC,IAAD,CAAOE,KAAMF,GAAiBI,OAAQ,kBAAM,cAAC,GAAD,OAC5C,cAAC,IAAD,CAAOF,KAAMF,GAAaI,OAAQ,kBAAM,cAAC,GAAD,OACxC,cAAC,IAAD,CAAOF,KAAMF,GAAkBI,OAAQ,kBAAM,cAAC,GAAD,OAG7C,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,GAAD,aCRlBC,OAff,WACI,OACI,8BAEI,eAAC,IAAD,WAEA,cAAC,EAAD,IAEA,cAAC,GAAD,UCSGC,OAdf,WACI,OACI,sBAAKjP,UAAWS,IAAEwO,IAAlB,UACI,mDAKA,cAAC,GAAD,QCJQC,QACa,cAA7B3E,OAAO4E,SAASC,UAEa,UAA7B7E,OAAO4E,SAASC,UAEhB7E,OAAO4E,SAASC,SAASC,MACrB,2D,aCdFC,GAAWC,aAAgB,CAC7BhE,QlBU0B,WAA2E,IAA1EtE,EAAyE,uDAAlDgE,GAAWlC,EAAuC,uCACpG,OAAQA,EAAOlE,MACX,KAAK+F,GAAaQ,cACd,OAAO,2BACAnE,GADP,IAEIiE,UAAWnC,EAAOmC,YAG1B,QACI,OAAOjE,IkBlBfgG,MXMwB,WAA0F,IAAzFhG,EAAwF,uDAA5DgE,GAAWlC,EAAiD,uCACjH,OAAQA,EAAOlE,MACX,KAAKmI,GACD,OAAO,2BAAI/F,GAAX,IAAkBgG,MAAOlE,EAAOkE,QAEpC,QACI,OAAOhG,MWRbuI,GAAQC,aAAYH,IAEXE,MAKfjF,OAAOiF,MAAQA,GCTfE,IAASX,OACL,cAAC,KAAD,CAAUS,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJG,SAASC,eAAe,SF+HpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnB5B,MAAK,SAAA6B,GACFA,EAAaC,gBAEhB3B,OAAM,SAAAnL,GACHwI,QAAQxI,MAAMA,EAAMlC,c","file":"static/js/main.f9bcf485.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__3dJkY\",\"affair\":\"Affairs_affair__UsYHW\",\"high\":\"Affairs_high__3sqCY\",\"middle\":\"Affairs_middle__2U1-k\",\"low\":\"Affairs_low__1QHOj\",\"delete_button\":\"Affairs_delete_button__3TJKt\",\"affairs_wrapper\":\"Affairs_affairs_wrapper__1uiOy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__3SHlW\",\"active\":\"Header_active__Px1lZ\",\"navbar_square\":\"Header_navbar_square__288Ut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__ecW4g\",\"error\":\"Greeting_error__1_lmA\",\"no_error\":\"Greeting_no_error__3waxk\",\"input\":\"Greeting_input__kr7vW\",\"error_message\":\"Greeting_error_message__lyqAX\",\"wrapper\":\"Greeting_wrapper__3UgTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_wrapper\":\"Message_message_wrapper__1Flo3\",\"userName_text_time\":\"Message_userName_text_time__2lrqL\",\"userName_text\":\"Message_userName_text__Qf9pj\",\"time\":\"Message_time__2YjpS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3rlWB\",\"errorInput\":\"SuperInputText_errorInput__qRc2H\",\"error\":\"SuperInputText_error__3c-qi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__lFqot\",\"dark-text\":\"HW12_dark-text__TAYCy\",\"red\":\"HW12_red__3s46R\",\"red-text\":\"HW12_red-text__74x7T\",\"some\":\"HW12_some__1CRPr\",\"some-text\":\"HW12_some-text__2PFiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2AvlA\",\"column\":\"HW4_column__3K1Si\",\"testSpanError\":\"HW4_testSpanError__3Nukz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2UF7P\",\"red\":\"SuperButton_red__14vFq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2lp2O\",\"spanClassName\":\"SuperCheckbox_spanClassName__1YwUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1mepC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__373ST\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport cls from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <nav className={cls.navbar}>\r\n                <NavLink to=\"/pre-junior\" activeClassName={cls.active}>pre-junior</NavLink>\r\n                <NavLink to=\"/junior\" activeClassName={cls.active}>junior</NavLink>\r\n                <NavLink to=\"/junior+\" activeClassName={cls.active}>junior+</NavLink>\r\n                <span className={cls.navbar_square}></span>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {MessageDataType} from \"./HW1\";\r\nimport s from './Message.module.css'\r\n\r\nfunction Message(props: MessageDataType) {\r\n    return (\r\n        <div className={s.message_wrapper}>\r\n            <div>\r\n                <img src={props.avatar} alt=\"avatar\"/>\r\n            </div>\r\n            <div className={s.userName_text_time}>\r\n                <div className={s.userName_text}>\r\n                    <p>{props.name}</p>\r\n                    <p>{props.message}</p>\r\n                </div>\r\n                <div className={s.time}>\r\n                    {props.time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\n\r\nexport type MessageDataType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nconst messageData: MessageDataType = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'George',\r\n    message: 'первую домашку от Игната сделал?',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport cls from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n\r\n    const priorityColor = props.affair.priority === 'high' ? cls.high : props.affair.priority === 'middle' ? cls.middle : cls.low\r\n\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }\r\n    return (\r\n        <div className={cls.affair}>\r\n            <div> {props.affair.name}</div>\r\n            <div><span className={priorityColor}>{`[${props.affair.priority}]`}</span></div>\r\n            <div>\r\n                <button onClick={deleteCallback} className={cls.delete_button}>X</button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport cls from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div className={cls.affairs_wrapper}>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    switch (filter) {\r\n        case 'low' :\r\n            return affairs.filter(a => a.priority === 'low')\r\n        case \"middle\":\r\n            return affairs.filter(a => a.priority === 'middle')\r\n        case \"high\":\r\n            return affairs.filter(a => a.priority === 'high')\r\n        default:\r\n            return affairs\r\n    }\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void// need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    addUserOnKeyPress: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, addUserOnKeyPress} // деструктуризация пропсов\r\n) => {\r\n\r\n    const inputClass = error === \"name is require\" ? s.error : s.no_error\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <input value={name} onChange={setNameCallback} className={`${inputClass} ${s.input}`}\r\n                   onKeyPress={addUserOnKeyPress}/>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{`Total users: ${totalUsers}`}</span>\r\n            <div className={s.error_message}>{error}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        if (e.currentTarget.value === \" \") {\r\n            setError('name is require')\r\n        } else if (e.currentTarget.value !== \" \"){\r\n            setError(\"\")\r\n            setName(e.currentTarget.value)\r\n            }\r\n    }\r\n\r\n    const addUser = () => {\r\n        if (name.length === 0) {\r\n            setError('name is require')\r\n        } else {\r\n            addUserCallback(name)\r\n            setError('')\r\n            alert(`Hello ${name} !`)\r\n            setName('')\r\n        }\r\n\r\n    }\r\n\r\n    const addUserOnKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\r\n        if (e.key === \"Enter\" && name.length > 0) {\r\n            addUserCallback(name)\r\n            setError('')\r\n            alert(`Hello ${name} !`)\r\n            setName('')\r\n        } else if (e.key === \"Enter\") {\r\n            setError('name is require')\r\n        }\r\n\r\n        // (name.length === 0) ? setError('name is require') : addUserCallback(name)\r\n\r\n    }\r\n\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUserOnKeyPress={addUserOnKeyPress}\r\n            error={error}\r\n            addUser={addUser}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const newUser = {_id: v1(), name: name}\r\n        setUsers([...users, newUser]) // need to fix\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n\r\n    const [text, setText] = useState<string>('')\r\n    const error = text.trim() ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, работает ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {useState} from \"react\";\r\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n    };\r\n    const restore = () => {\r\n        setValue(restoreState(\"editable-span-value\", value));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options: string[]\r\n    onChangeOption: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions= options.map((o,index)=>{\r\n        return <option key={index}>{o}</option>\r\n    }); // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options: string[]\r\n    onChangeOption: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions = options ? options.map((opt, i) => {\r\n        return (\r\n            // map options with key\r\n            <label key={i}>\r\n                <input\r\n                    type={\"radio\"}\r\n                    onChange={onChangeCallback}\r\n                    name={name}\r\n                    value={opt}\r\n                    checked={value === opt}\r\n                    // name, checked, value, onChange\r\n                />\r\n                {opt}\r\n            </label>\r\n\r\n        )\r\n    }) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {useState} from \"react\";\r\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\r\n\r\nconst arr = [\"x\", \"y\", \"z\"];\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[0]);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={\"radio\"}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW7;\r\n","import {initialPeopleType, PeopleType} from \"../HW8\";\r\n\r\ntype sortACUpType = ReturnType<typeof sortUpAC>\r\ntype sortACDownType = ReturnType<typeof sortDownAC>\r\ntype checkACType = ReturnType<typeof checkAC>\r\n\r\nexport type ACTypes = checkACType | sortACUpType | sortACDownType\r\n\r\nexport const homeWorkReducer = (state: initialPeopleType, action: ACTypes): initialPeopleType => {\r\n        const copyState = state.map(p => ({...p}))\r\n        switch (action.type) {\r\n            case \"sort\":\r\n                if (action.payload === 'up') {\r\n                    return copyState.sort((a: PeopleType, b: PeopleType) => a.name > b.name ? 1 : -1)\r\n                } else {\r\n                    return copyState.sort((a: PeopleType, b: PeopleType) => a.name < b.name ? 1 : -1)\r\n                }\r\n            case \"check\":\r\n                return copyState.filter(p => p.age > 18)\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n;\r\n\r\nexport const sortUpAC = () => {\r\n    return {\r\n        type: 'sort',\r\n        payload: 'up'\r\n    } as const\r\n}\r\n\r\nexport const sortDownAC = () => {\r\n    return {\r\n        type: 'sort',\r\n        payload: 'down'\r\n    } as const\r\n}\r\n\r\nexport const checkAC = () => {\r\n    return {\r\n        type: 'check',\r\n        payload: 18\r\n    } as const\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {checkAC, homeWorkReducer, sortDownAC, sortUpAC} from \"./bll/homeWorkReducer\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\nexport type PeopleType = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\n\r\nexport type initialPeopleType = PeopleType[]\r\n\r\nconst initialPeople: initialPeopleType = [\r\n    {_id: 0, name: \"Кот\", age: 3},\r\n    {_id: 1, name: \"Александр\", age: 66},\r\n    {_id: 2, name: \"Коля\", age: 16},\r\n    {_id: 3, name: \"Виктор\", age: 44},\r\n    {_id: 4, name: \"Дмитрий\", age: 40},\r\n    {_id: 5, name: \"Ирина\", age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState(initialPeople);\r\n\r\n    const finalPeople = people.map(p => (\r\n        <tr key={p._id}>\r\n            <td>{p.name}</td>\r\n            <td>{p.age}</td>\r\n        </tr>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, sortUpAC()))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, sortDownAC()))\r\n    const check18 = () => setPeople(homeWorkReducer(initialPeople, checkAC()))\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Age</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {finalPeople}\r\n                </tbody>\r\n            </table>\r\n\r\n            <div>\r\n                <SuperButton onClick={sortUp}>sort up</SuperButton>\r\n                <SuperButton onClick={sortDown}>sort down</SuperButton>\r\n                <SuperButton onClick={check18}>check 18</SuperButton>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW8;\r\n","import React, {useState} from \"react\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\nfunction Clock() {\r\n\r\n    const [timerId, setTimerId] = useState<number>(0);\r\n    const [date, setDate] = useState<Date>()\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    const stop = () => {\r\n        clearInterval(timerId)\r\n    }\r\n    const start = () => {\r\n        // stop();\r\n        const id: number = window.setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000);\r\n        setTimerId(id);\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    };\r\n    const onMouseLeave = () => {\r\n        setShow(false)\r\n    };\r\n\r\n    const stringTime = \"Time\"; // fix with date\r\n    const stringDate = \"Date\"; // fix with date\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                {`${stringTime} : ${date ? date.toLocaleTimeString() : \"\" }`}\r\n            </div>\r\n\r\n            {show && (\r\n                <div>\r\n                    {`${stringDate} : ${date ? date.toDateString() : \"\" }`}\r\n                </div>\r\n            )}\r\n\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clock;\r\n","import React from \"react\";\r\nimport Clock from \"./Clock\";\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW9;\r\n","enum ACTION_TYPES {\r\n    SET_PRELOADER = 'SET_PRELOADER'\r\n}\r\n\r\ntype InitStateType = {\r\n    isLoading: boolean\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof loadingAC>\r\n\r\n\r\nconst initState: InitStateType = {\r\n    isLoading: false\r\n};\r\n\r\nexport const loadingReducer = (state: InitStateType = initState, action: ActionsType): InitStateType => { // fix any\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_PRELOADER: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const loadingAC = (isLoading: boolean) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_PRELOADER,\r\n        isLoading\r\n    } as const\r\n};","export default __webpack_public_path__ + \"static/media/preloader.4d3101de.svg\";","import React from \"react\";\r\nimport preloader from './images/preloader.svg'\r\n\r\nexport const Preloader = React.memo(() => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {Preloader} from \"../../Preloader\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"./bll/store\";\r\nimport {loadingAC} from \"./bll/loadingReducer\";\r\n\r\nfunction HW10() {\r\n\r\n    const isLoading = useSelector<AppStoreType>(state=> state.loading.isLoading)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setLoading = () => {\r\n        dispatch(loadingAC(true))\r\n        setTimeout(()=>{\r\n            dispatch(loadingAC(false))\r\n        },2000)\r\n        console.log(\"loading...\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {isLoading\r\n                ? (\r\n                    <Preloader/>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW10;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperRange.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"range\"}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","import React from \"react\";\r\nimport {Slider} from \"@material-ui/core\";\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange: (value: number | number[]) => void\r\n    value: number | number[]\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        onChangeRange, value\r\n    }\r\n) => {\r\n    // сделать самому, можно подключать библиотеки\r\n\r\n    const handleChange = (event: any, newValue: number | number[]) => {\r\n        onChangeRange(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Slider\r\n                style={{\r\n                    width: '300px',\r\n                    margin: '0 10px'\r\n                }}\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperDoubleRange;\r\n","import React, {useState} from \"react\";\r\nimport SuperRange from \"./common/c7-SuperRange/SuperRange\";\r\nimport SuperDoubleRange from \"./common/c8-SuperDoubleRange/SuperDoubleRange\";\r\n\r\nfunction HW11() {\r\n    const [value1, setValue1] = useState(10);\r\n    const [value2, setValue2] = useState(90);\r\n\r\n    const onChangeRangeSuperDoubleRange = (arrVal: number | number[]) => {\r\n        //@ts-ignore\r\n        setValue1(arrVal[0])\r\n        //@ts-ignore\r\n        setValue2(arrVal[1])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 11\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <div>{value1}</div>\r\n                <SuperRange\r\n                    onChangeRange={setValue1}\r\n                    value={value1}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <span>{value1}</span>\r\n                <SuperDoubleRange\r\n                    value={[value1,value2]}\r\n                    onChangeRange={onChangeRangeSuperDoubleRange}\r\n                    // сделать так чтоб value1 и value2 изменялось\r\n                />\r\n                <span>{value2}</span>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW11;\r\n","const CHANGE_THEME = 'CHANGE_THEME'\r\n\r\nexport type InitStateThemeType = {\r\n    theme: string\r\n}\r\n\r\nconst initState = {\r\n    theme: 'some'\r\n};\r\n\r\ntype changeThemeCType = ReturnType<typeof changeThemeC>\r\n\r\nexport const themeReducer = (state: InitStateThemeType = initState, action: changeThemeCType): InitStateThemeType => {\r\n    switch (action.type) {\r\n        case CHANGE_THEME: {\r\n            return {...state, theme: action.theme}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const changeThemeC = (theme: string)  => {\r\n    return{\r\n        type: CHANGE_THEME,\r\n        theme\r\n    } as const\r\n}","import React from \"react\";\r\nimport s from \"./HW12.module.css\";\r\nimport SuperRadio from \"../h7/common/c6-SuperRadio/SuperRadio\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../h10/bll/store\";\r\nimport {changeThemeC, InitStateThemeType} from \"./bll/themeReducer\";\r\n\r\nconst themes = ['dark', 'red', 'some'];\r\n\r\nfunction HW12() {\r\n\r\n    const theme = useSelector<AppStoreType, string>(state => state.theme.theme)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const changeTheme = (theme: string) => {\r\n        dispatch(changeThemeC(theme))\r\n    }\r\n\r\n    return (\r\n        <div className={s[theme]}>\r\n            <hr/>\r\n            <span className={s[theme + '-text']}>\r\n                homeworks 12\r\n            </span>\r\n            <div className={s[theme + '-text']}>Choose color of theme:</div>\r\n            <SuperRadio\r\n                options={themes}\r\n                onChangeOption={changeTheme}\r\n                value={theme}\r\n            />\r\n\r\n            {/*should work (должно работать)*/}\r\n            {/*SuperSelect or SuperRadio*/}\r\n\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW12;\r\n","import React from 'react'\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from \"../../h11/HW11\";\r\nimport HW12 from '../../h12/HW12';\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n            <HW11/>\r\n            <HW12/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import axios from \"axios\";\r\n\r\nlet axiosInstance = axios.create({\r\n    baseURL: 'https://neko-cafe-back.herokuapp.com/'\r\n})\r\n\r\nexport const ignatApi = {\r\n    testApi (success: boolean) {\r\n        return axiosInstance.post('auth/test',{\r\n            success\r\n        })\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {ignatApi} from \"./RequestsAPI\";\r\nimport SuperButton from \"../../h4/common/c2-SuperButton/SuperButton\";\r\n\r\nexport const Request = () => {\r\n\r\n    const [checkbox, setCheckbox] = useState(false)\r\n\r\n    const [error, setError] = useState<string | null>(null)\r\n\r\n    const [goodResponse, setGoodResponse] = useState<string | null>(null)\r\n\r\n    const onclickhandler = () => {\r\n        ignatApi.testApi(checkbox)\r\n            .then(res => {\r\n                setGoodResponse(res.data.errorText)\r\n            })\r\n            .catch(error => {\r\n                let errorResponse = error.response ? error.response.data.errorText : error.message\r\n                setError(errorResponse)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n\r\n            <div>\r\n                <p>{`1) If you want to see a bad response => uncheck a checkbox please and click \"Send request!\"`}</p>\r\n                <p>{`2) If you want to see a good response => check a checkbox please and click \"Send request!\"`}</p>\r\n                <input\r\n                    style={{\r\n                        width: '30px',\r\n                        height: '30px',\r\n                        marginLeft: '50px'\r\n                    }}\r\n                    checked={checkbox}\r\n                    type={'checkbox'}\r\n                    onChange={(e) => setCheckbox(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={onclickhandler}>\r\n                Send request!\r\n            </SuperButton>\r\n\r\n            <p>{error && `Error: ${error}`}</p>\r\n            <p>{goodResponse && `Good response: ${goodResponse}`}</p>\r\n            <SuperButton onClick={() => {\r\n                setError(null)\r\n                setGoodResponse(null)\r\n            }\r\n            }>\r\n                Clear responses\r\n            </SuperButton>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Request} from \"./Request/Request\";\r\n\r\nexport const HW13 = () => {\r\n    return (\r\n        <div>\r\n            <Request/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {HW13} from \"../../h13/HW13\";\r\n\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            <HW13/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch } from 'react-router-dom'\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PlUS: '/junior+'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PlUS} render={() => <JuniorPlus/>}/>\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport {loadingReducer} from \"./loadingReducer\";\r\nimport {themeReducer} from \"../../h12/bll/themeReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    loading: loadingReducer,\r\n    theme: themeReducer\r\n\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./p2-homeworks/h10/bll/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}